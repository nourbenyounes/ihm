trigger:
  branches:
    include:
      - main

pool:
  name: 'Default'
  demands:
    - agent.name -equals AgentSelfHosted

variables:
  system.debug: true
  containerRegistry: 'registry0'
  imageRepository: 'imagerepository0'

stages:
- stage: BuildAndTest
  displayName: Build and Test
  jobs:
  - job: BuildAndTest
    displayName: Build and Test Application
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'  # Node.js 18 or higher
      displayName: 'Install Node.js'

    - script: |
        node -v
        npm -v
      displayName: 'Verify Node.js and npm Versions'

    - script: |
        npm install -g @angular/cli
      displayName: 'Install Angular CLI'

    - script: |
        cd app  
        npm install --frozen-lockfile
        npm run build --prod
      displayName: 'Build Frontend'

    - script: |
        cd app  
        ng test --watch=false --browsers=ChromeHeadless 
      displayName: 'Run Tests'


- stage: DockerBuildAndPush
  displayName: Docker Build and Push
  dependsOn: BuildAndTest  # Ensure this stage runs after BuildAndTest
  jobs:
  - job: DockerBuildAndPush
    displayName: Build and Push Docker Image
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: $(containerRegistry)  # Container registry name
        repository: $(imageRepository)  # Repository name
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'  # Path to your Dockerfile
        tags: '$(Build.BuildId)'  # Optional: You can tag the image with the build ID
      displayName: 'Build and Push Docker Image'
